<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Description</key>
    <string>Downloads locale specific Firefox and imports into Munki.

Set the 'LOCALE' variable to the required language version.

List of available locale codes here: https://ftp.mozilla.org/pub/firefox/releases/110.0.1/mac/ or here https://ftp.mozilla.org/pub/firefox/releases/latest/README.txt</string>
    <key>Identifier</key>
    <string>com.github.dataJAR-recipes.Firefox-locale</string>
    <key>Input</key>
    <dict>
        <key>LOCALE</key>
        <string>en-GB</string>
        <key>FORCE_MUNKIIMPORT</key>
        <string>YES!</string>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps/firefox</string>
        <key>NAME</key>
        <string>Firefox_%LOCALE%</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>testing</string>
            </array>
            <key>description</key>
            <string>Mozilla Firefox is a free and open source web browser.</string>
            <key>display_name</key>
            <string>Mozilla Firefox</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>developer</key>
            <string>Mozilla</string>
            <key>unattended_install</key>
            <true/>
            <key>unattended_uninstall</key>
            <true/>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>2.0</string>
    <key>ParentRecipe</key>
    <string>com.github.autopkg.download.firefox-rc-en_US</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Processor</key>
            <string>com.github.dataJAR-recipes.Shared Processors/FirefoxGetLocaleAndVersion</string>
            <key>Arguments</key>
            <dict>
                <key>choosen_locale</key>
                <string>%LOCALE%</string>
                <key>dmg_path</key>
                <string>%pathname%</string>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiPkginfoMerger</string>
            <key>Arguments</key>
            <dict>
                <key>additional_pkginfo</key>
                <dict>
                    <key>version</key>
                    <string>%app_version%</string>
                    <key>installcheck_script</key>
                    <string>#!/bin/zsh

# Copyright 2025, Jamf Software, LLC.

#
# DESCRIPTION
#
# Checks Firefox locale and version. Exits 0 to install if Firefox is not installed,
# locale cannot be determined, or version is older with matching locale. Exits 1 to
# cancel if locales don't match or version is same/newer with matching locale.
#
# Uses unzip command to extract locale information from omni.ja file.
# https://bugzilla.mozilla.org/show_bug.cgi?id=1936505

# Function to compare version strings using sort -V
compare_versions() {
    local version1="$1"
    local version2="$2"

    # Use sort -V to compare versions
    local sorted_first=$(printf '%s\n%s\n' "$version1" "$version2" | sort -V | head -n1)

    if [[ "$sorted_first" == "$version1" ]] &amp;&amp; [[ "$version1" != "$version2" ]]; then
        # version1 is strictly less than version2
        return 0
    else
        # version1 is greater than or equal to version2
        return 1
    fi
}

# Function to extract locale from omni.ja file
get_firefox_locale() {
    local firefox_path="$1"
    local omni_path="$firefox_path/Contents/Resources/omni.ja"

    if [[ ! -f "$omni_path" ]]; then
        echo "Cannot find $omni_path"
        return 1
    fi

    # Extract locale using unzip
    local locale=$(unzip -p "$omni_path" default.locale 2&gt;/dev/null | tr -d '\r\n')

    if [[ -z "$locale" ]]; then
        echo "Empty locale returned from omni.ja"
        return 1
    fi

    echo "$locale"
    return 0
}

# Variable declaration
firefox_path="/Applications/Firefox.app"
firefox_info_plist="$firefox_path/Contents/Info.plist"
firefox_locale="%app_locale%"
firefox_version="%app_version%"

# If Firefox.app is not installed, proceed with installation
if [[ ! -d "$firefox_path" ]]; then
    echo "$firefox_path not installed, proceeding with installation..."
    exit 0
fi

# Get installed Firefox locale
if installed_locale=$(get_firefox_locale "$firefox_path"); then
    echo "Installed locale: $installed_locale"
    echo "Package locale: $firefox_locale"

    # If locales don't match, cancel installation
    if [[ "$installed_locale" != "$firefox_locale" ]]; then
        echo "Installed locale ($installed_locale) differs from package locale ($firefox_locale)"
        echo "Cancelling installation..."
        exit 1
    fi
else
    echo "Could not determine installed Firefox locale, proceeding with installation..."
    exit 0
fi

# Locales match, check version
if [[ -f "$firefox_info_plist" ]]; then
    # Extract version from Info.plist using plutil
    if installed_version=$(plutil -extract CFBundleShortVersionString raw "$firefox_info_plist" 2&gt;/dev/null); then
        echo "Installed version: $installed_version"
        echo "Package version: $firefox_version"

        if compare_versions "$installed_version" "$firefox_version"; then
            echo "Installed version is older, proceeding with installation..."
            exit 0
        else
            echo "Installed version is same or newer, cancelling installation..."
            exit 1
        fi
    else
        echo "Error reading version info, proceeding with installation..."
        exit 0
    fi
else
    echo "Cannot find $firefox_info_plist, proceeding with installation..."
    exit 0
fi


if __name__ == '__main__':
    main()</string>
                </dict>
            </dict>
        </dict>
        <dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
                <key>force_munkiimport</key>
                <string>%FORCE_MUNKIIMPORT%</string>
            </dict>
        </dict>
    </array>
</dict>
</plist>
